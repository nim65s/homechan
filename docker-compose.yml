version: '3'

services:
  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - "${CHATONS_ROOT_DIR:-/srv/chatons}/homechan/sql:/var/lib/postgresql/data"
  app:
    build: .
    restart: unless-stopped
    volumes:
      - "${CHATONS_ROOT_DIR:-/srv/chatons}/homechan/srv:/srv"
    env_file:
      - .env
    environment:
      - DB=postgres
    networks:
      - web
      - default
    labels:
      traefik.enable: "true"
      traefik.http.routers.homechan-app.rule: "Host(`homechan.${DOMAIN_NAME:-localhost}`)"
  nginx:
    image: nim65s/ndh:nginx
    restart: unless-stopped
    volumes:
      - "${CHATONS_ROOT_DIR:-/srv/chatons}/homechan/srv/homechan:/srv:ro"
    networks:
      - web
    labels:
      traefik.enable: "true"
      traefik.http.routers.homechan-ngx.rule: "Host(`homechan.${DOMAIN_NAME:-localhost}`) && PathPrefix(`/static`, `/media`)"
  redis:
    image: redis:alpine
    restart: unless-stopped

  mqtt:
    image: nim65s/mqttasgi
    restart: unless-stopped
    env_file:
      - .env.mqtt
    command: homechan.asgi:application
    volumes:
      - .:/app

  matrix:
    image: nim65s/matrix-asgi
    restart: unless-stopped
    env_file:
      - .env.matrix
    command: homechan.asgi:application
    volumes:
      - .:/app


networks:
  web:
    external: true
